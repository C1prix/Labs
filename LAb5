;Archivo: Main.s
;Dispositivo: PIC16F887
;Autor: Gabriel Cipriano
;Compilador: pic-as (v2.30),MPLABX v5.40
;
;Programa: Incrementar o Decrementar Un contador de 4 bits con RB0 y RB1
;Hardware: LEDs en el puerto A y push button en el puerto B
;
;Creado: 21 de febrero, 2023
;Ultima modificacion: 24 de Febrero, 2023

PROCESSOR 16F887
    
#include <xc.inc>
    
;configuracion Word 1
CONFIG FOSC=INTRC_NOCLKOUT //Oscilador Interno sin Salidas 
CONFIG WDTE=OFF	// WDT disabled reinicio repetitivo del procesador
CONFIG PWRTE=ON	//PWRT enabled (espera de 72ms al iniciar 
CONFIG MCLRE=OFF //El pin del MCLR se utiliza como I/O
CONFIG CP=OFF	//Sin proteccion de codigo
CONFIG CPD=OFF	//sin proteccion de Datos

CONFIG BOREN=OFF	//Sin reinicio cuando el voltaje de alimentacion baja de 4v
CONFIG IESO=OFF //Reinicio sin cambio de Reloj de interno a Externo
CONFIG FCMEN=OFF	//Cambio de reloj externo a interno en caso de fallo
CONFIG LVP=ON	//Programacion en bajo voltaje permitida

;configuration word 2
CONFIG WRT=OFF	//Proteccion de autoescritura por el programa desactivada
CONFIG BOR4V=BOR40V//Reinicio abajo de 4v, (BOR221V=2. 1V)

reinicio_tmr	macro
    banksel PORTA
    movlw   237
    movwf   TMR0
    bcf	    T0IF
    endm 
	
PSECT udata_bank0; Variables en el banco seleccionado 0
	var1:		DS	2   ;2 bytes
	var2:		DS	2   ;2 bytes
	Var_display:	DS	2   ;1 byte
	var:		DS	1	
	nibble:		DS	2   ;2 byte
	banderas:	DS	1   ;1 byte
	cont_small:	DS	1   ;1 byte
	cont_big:	DS	1   ;1 byte
	unidades:	DS	1   ;1 byte
	decenas:	DS	1   ;1 byte
	centenas:	DS	1   ;1 byte

PSECT udata_shr  ;memoria compartida  
	W_TEMP:		DS  1; 1 byte
	STATUS_TEMP:	DS  1; 1 byte
	

PSECT resVect, class=CODE, abs, delta=2    
;---------------Vector reset------------------------------------------------
ORG 00h	;posicion 0000h para el reset
resetVec:
    PAGESEL main
    goto main

PSECT intVect, class=CODE, abs, delta=2    
;---------------Vector Interrupcion------------------------------------------
ORG 04h	;posicion 0004h para las interrupciones
pus:
    movwf   W_TEMP
    swapf   STATUS, W
    movwf   STATUS_TEMP
    
isr:    
    btfsc    T0IF
    call    int_tmr0
    
    btfsc   RBIF
    call    int_IOCB
    
pop:
    swapf   STATUS_TEMP,    W
    movwf   STATUS
    swapf   W_TEMP, F
    swapf   W_TEMP, W
    retfie
;--------------------subrutinas de Interrupcion------------------------------
int_tmr0:
    reinicio_tmr	;50ms
    clrf    PORTD
    btfsc   unidades,	0
    goto    display_0
    
    btfsc   decenas,	0
    goto    display_1
    
    btfsc   centenas,	0
    goto    display_0
    
    
display_0:
    movf    unidades,  W
    movwf   PORTC
    bsf	    PORTD,  0
    
    
display_1:
    
    movf    decenas,  W
    movwf   PORTC
    bsf	    PORTD,  1
    
    
display_2:
    movf    centenas,  W
    movwf   PORTC
    bsf	    PORTD,  2
    return

    
    
int_IOCB:
    banksel PORTB
    btfss   PORTB,  0
    incf    PORTA
    btfss   PORTB,  1
    decf    PORTA
    bcf	    RBIF
    goto    conversion
    return

conversion:
    movf    var,   W	
    sublw   10
    btfsc   STATUS, 2	;check Bandera z
    goto    $+2
    goto    dece
    incf    unidades
    return
dece:
    incf    decenas
    movf    var,   W	
    sublw   100
    btfsc   STATUS, 2	;check Bandera z
    goto    loop
    incf    centenas
    clrf    decenas
    return

    
PSECT code, delta=2, abs
ORG 100h

tabla:
    clrf    PCLATH
    bsf	    PCLATH, 0	;pclath=01
    andlw   0x0f
    addwf   PCL		;PC = PCLATH + PCL
    ;	    .GFEDCBA
    retlw   00111111B	;0
    retlw   00000110B	;1
    retlw   01011011B	;2
    retlw   01001111B	;3
    retlw   01100110B	;4
    retlw   01101101B	;5
    retlw   01111101B	;6
    retlw   00000111B	;7
    retlw   01111111B	;8
    retlw   01101111B	;9
    retlw   01110111B	;A
    retlw   01111100B	;B
    retlw   00111001B	;C
    retlw   01011110B	;D
    retlw   01111001B	;E
    retlw   01110001B	;F 
 
main:
    call    config_io	    ;PORTA y PORTC como salidas, RB1 y RB0 como entradas
    call    config_reloj    ;4MHZ
    call    config_tmr
    call    config_interrupciones
    call    config_IOCB
    banksel PORTA
    
;---------------------------Loop principal-----------------------------------
loop:
    clrf    unidades
    movf    PORTA,  W
    movwf   var
    call    separacion
    call    preparacion
    goto    loop

    
;---------------------------Loop principal-----------------------------------
 
;---------------------------subrutinas--------------------------------------
separacion:
    movf    var,	W
    andlw   0x0f
    movwf   nibble	
    swapf   var,	W
    andlw   0x0f
    movwf   nibble+1 
    return
    
preparacion:
    movf    nibble, W
    call    tabla
    movwf   unidades
    movf    nibble+1, W
    call    tabla
    movwf   decenas+1
    movf    nibble+2, W
    call    tabla
    movwf   centenas+2
    return
    
config_io:
    banksel ANSEL	    ;seleccion del Banco 3
    clrf    ANSEL	    ;asignamos entrada Digital 
    clrf    ANSELH	    ;asignamos entrada/salida digital
    
    
    
    Banksel TRISA	    ;seleccion del Banco 1
    clrf    TRISA	    ;asignamos como Salidas
    bsf	    TRISB,  0
    bsf	    TRISB,  1	    ;asignamos como entradas
    clrf    TRISC
    bcf	    TRISD,  0
    bcf	    TRISD,  1
    bcf	    TRISD,  2
    
    bcf	    OPTION_REG,	7   ;RBPU, Habilitar Pull Ups
    bsf	    WPUB,	0   ;RB0 y RBI como entradas (interrupciones)
    bsf	    WPUB,	1
    
    banksel PORTA	    ;seleccion del Banco 0
    clrf    PORTA	    ;limpiamos valores en el puerto A
    clrf    PORTC
    clrf    PORTD
    return
    
config_reloj:
    banksel OSCCON 
    bsf	    IRCF2   ;OSCCON, 6
    bsf	    IRCF1   ;OSCCON, 5 Oscilador 250khz
    bcf	    IRCF0   ;OSCCON, 4
    bsf	    SCS	    ;reloj interno
    return
config_tmr:
    banksel TRISA	;Cambiamos a el banco de Option_reg
    bcf	    T0CS	;Seleccionamos el Reloj Interno
    bcf	    PSA		;Activamos el preescalador
    bsf	    PS2
    bsf	    PS1
    bsf	    PS0		;PS=110
    reinicio_tmr
    return
config_interrupciones:
    bsf	GIE
    bsf	T0IE
    bcf	T0IF
    bsf	RBIE
    bcf	RBIF
    return
config_IOCB:
    banksel TRISB
    bsf	    IOCB,   0
    bsf	    IOCB,   1
    
    banksel PORTA
    movf    PORTA,  W	;al leer termina la condicion de mismatch
    bcf	    RBIF
    return

    
END
