;Archivo: Main.s
;Dispositivo: PIC16F887
;Autor: Gabriel Cipriano
;Compilador: pic-as (v2.30),MPLABX v5.40
;
;Programa: Incrementar o Decrementar Un contador de 4 bits con RB0 y RB1
;Hardware: Displays 7 segmentos en el puerto A y C
;
;Creado: 13 de febrero, 2023
;Ultima modificacion: 17 de Febrero, 2023

PROCESSOR 16F887
    
#include <xc.inc>
    
;configuracion Word 1
CONFIG FOSC=INTRC_NOCLKOUT //Oscilador Interno sin Salidas 
CONFIG WDTE=OFF	// WDT disabled reinicio repetitivo del procesador
CONFIG PWRTE=ON	//PWRT enabled (espera de 72ms al iniciar 
CONFIG MCLRE=OFF //El pin del MCLR se utiliza como I/O
CONFIG CP=OFF	//Sin proteccion de codigo
CONFIG CPD=OFF	//sin proteccion de Datos

CONFIG BOREN=OFF	//Sin reinicio cuando el voltaje de alimentacion baja de 4v
CONFIG IESO=OFF //Reinicio sin cambio de Reloj de interno a Externo
CONFIG FCMEN=OFF	//Cambio de reloj externo a interno en caso de fallo
CONFIG LVP=ON	//Programacion en bajo voltaje permitida

;configuration word 2
CONFIG WRT=OFF	//Proteccion de autoescritura por el programa desactivada
CONFIG BOR4V=BOR40V//Reinicio abajo de 4v, (BOR221V=2. 1V)

UP	EQU 1
DOWN	EQU 0
reinicio_tmr	macro
    banksel PORTA
    movlw   237
    movwf   TMR0
    bcf	    T0IF
    endm 
	
PSECT udata_bank0; Variables en el banco seleccionado 0
	var1:	    DS	2   ;2 bytes
	var2:	    DS	2   ;2 bytes
	var3:	    DS	2   ;2 bytes

PSECT udata_shr  ;memoria compartida  
	W_TEMP:		DS  1; 1 byte
	STATUS_TEMP:	DS  1; 1 byte

PSECT resVect, class=CODE, abs, delta=2    
;---------------Vector reset------------------------------------------------
ORG 00h	;posicion 0000h para el reset
resetVec:
    PAGESEL main
    goto main

PSECT intVect, class=CODE, abs, delta=2    
;---------------Vector Interrupcion------------------------------------------
ORG 04h	;posicion 0004h para las interrupciones
pus:
    movwf   W_TEMP
    swapf   STATUS, W
    movwf   STATUS_TEMP
    
isr:    
    btfsc    T0IF
    call    int_tmr0
    
   
    
pop:
    swapf   STATUS_TEMP,    W
    movwf   STATUS
    swapf   W_TEMP, F
    swapf   W_TEMP, W
    retfie
;--------------------subrutinas de Interrupcion------------------------------
int_tmr0:
    reinicio_tmr    ;50ms
    incf    var1	;incrementamos 1 en Var1
    movf    var1,   W	;movemos el valor de Var1 a W
    sublw   200		;restamos 200 a W
    btfss   STATUS,2 ; ZERO
    goto    intr	;salto a la subrutina
    goto    int_Display	;Salto a Subrutina



int_Display:
    clrf    var1
    incf    var2	;incremento Var2
    movf    var2,   W	    
    sublw   10		;resta a Var2
    btfss   STATUS, 2	;Revisar Bandera Z
    goto    Display_clear   ;salto
    goto    Display2	    ;salto
intr:
    return
    
Display_clear:
    movf    var2,   W
    call    tabla	    ;llamada a conversion por parte de Tabla
    movwf   PORTA   ;cada 1000 ms o 1s
    return

Display2:
    clrf    var2	;limpiamos la variable del primer Display
    incf    var3	;incrementamos la variable para segundo Display
    movf    var3,   W	
    sublw   10		;restamos 10 a var3
    btfsc   STATUS, 2	;check Bandera z
    goto    Display2_clear  ;salto
    movf    var3,   W	    
    call    tabla
    movwf   PORTC   ;cada 10s
    goto    Display_clear
    
Display2_clear:
    clrf    var3
    movf    var3,   W
    call    tabla
    movwf   PORTC   ;cada 1 min
    return
    
PSECT code, delta=2, abs
ORG 100h

tabla:
    clrf    PCLATH
    bsf	    PCLATH, 0	;pclath=01
    andlw   0x0f
    addwf   PCL		;PC = PCLATH + PCL
    ;	    .GFEDCBA
    retlw   00111111B	;0
    retlw   00000110B	;1
    retlw   01011011B	;2
    retlw   01001111B	;3
    retlw   01100110B	;4
    retlw   01101101B	;5
    retlw   01111101B	;6
    retlw   00000111B	;7
    retlw   01111111B	;8
    retlw   01101111B	;9
    
 
main:
    call    config_io	    ;PORTA y PORTC como salidas, RB1 y RB0 como entradas
    call    config_reloj    ;4MHZ
    call    config_tmr
    call    config_interrupciones
    
    banksel PORTA
    
;---------------------------Loop principal-----------------------------------
loop:
    goto    loop

    
;---------------------------Loop principal-----------------------------------
 
;---------------------------subrutinas--------------------------------------

   
config_io:
    banksel ANSEL	    ;seleccion del Banco 3
    clrf    ANSEL	    ;asignamos entrada Digital 
    clrf    ANSELH	    ;asignamos entrada/salida digital
    
    
    
    Banksel TRISA	    ;seleccion del Banco 1
    clrf    TRISA	    ;asignamos como Salidas
    bsf	    TRISB,  DOWN
    bsf	    TRISB,  UP	    ;asignamos como entradas
    clrf    TRISC
    
    bcf	    OPTION_REG,	7   ;RBPU, Habilitar Pull Ups
    bsf	    WPUB,	0   ;RB0 y RBI como entradas (interrupciones)
    bsf	    WPUB,	1
    
    banksel PORTA	    ;seleccion del Banco 0
    clrf    PORTA	    ;limpiamos valores en el puerto A
    clrf    PORTC
    return
    
config_reloj:
    banksel OSCCON 
    bsf	    IRCF2   ;OSCCON, 6
    bsf	    IRCF1   ;OSCCON, 5 Oscilador 250khz
    bcf	    IRCF0   ;OSCCON, 4
    bsf	    SCS	    ;reloj interno
    return
config_tmr:
    banksel TRISA	;Cambiamos a el banco de Option_reg
    bcf	    T0CS	;Seleccionamos el Reloj Interno
    bcf	    PSA		;Activamos el preescalador
    bsf	    PS2
    bsf	    PS1
    bsf	    PS0		;PS=110
    reinicio_tmr	;Salto hacia un Macro
    return
config_interrupciones:
    bsf	GIE
    bsf	T0IE
    bcf	T0IF	    ;configuramos las interrupciones del TMR0
;   bsf	RBIE
;   bcf	RBIF
    return

       

END
